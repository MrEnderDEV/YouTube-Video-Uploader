plugins {
    id 'application'
    id 'com.gluonhq.client-gradle-plugin' version '0.1.31'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'io.github.stekeblad'
version '1.5.0'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java", "src/main/resources"]
            includes = ["**/*.fxml",
                        "**/*.png",
                        "**/*.json",
                        "**/*.properties",
                        "**/*.css",
                        "**/*.pub",
                        "**/META-INF/**"
            ]
        }
    }
}

javafx {
    version = "11"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

repositories {
    mavenCentral()
}

mainClassName = 'io.github.stekeblad.videouploader.main.Main'

gluonClient {
    bundlesList = ["**/*.properties"]
    reflectionList = ["javafx.fxml.FXMLLoader"]
    mainClassName = 'io.github.stekeblad.videouploader.main.Main'
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', 'C:\\Program Files\\Java\\javafx-sdk-11\\lib',
                '--add-modules', 'javafx.controls,javafx.fxml',
        ]
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', 'C:\\Program Files\\Java\\javafx-sdk-11\\lib',
                '--add-modules', 'javafx.controls,javafx.fxml',
        ]
    }
}


task generateVersionNumberFile(dependsOn: compileJava) {
    inputs.property "version", project.version
    outputs.dir "$buildDir/resources/main/generated"
    doFirst {
        def versionFile = file("$buildDir/resources/main/generated/CurrentVersion.properties")
        versionFile.parentFile.mkdirs()
        versionFile.text = "$project.version"
    }
}

// Outputs to: build/libs/[baseName]-[version].jar
task makeMyJar(type: Jar, dependsOn: generateVersionNumberFile){
    baseName = 'Stekeblads_Video_Uploader'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes 'Main-Class': 'io.github.stekeblad.videouploader.main.Main'
    }
    with jar
}

dependencies {
    // The YouTube API and its requirements
    compile 'com.google.api-client:google-api-client:1.30.5'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.30.4'
    compile 'com.google.apis:google-api-services-youtube:v3-rev20200618-1.30.9'

    // For the metadata-related features
    compile 'org.jcodec:jcodec:0.2.5'

    // Verifying downloaded updates are real and not from someone else
    compile 'com.google.crypto.tink:tink:1.3.0'

    // A better HTTP-client than the one built into Java
    compile 'com.squareup.okhttp3:okhttp:4.5.0'

    // Java FX
    compile 'org.openjfx:javafx-controls:11.0.1'
    compile 'org.openjfx:javafx-fxml:11.0.1'

    // Converting JSON representations of classes to class instances
    compile 'com.google.code.gson:gson:2.8.6'
}

// https://developers.google.com/api-client-library/java/apis/youtube/v3
// https://search.maven.org/#search%7Cgav%7C1%7Cg%3A"com.google.apis"%20AND%20a%3A"google-api-services-youtube"
//
